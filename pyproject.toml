[project]
name = "auto-grade"
version = "0.1.0"
description = "A PoC of an automatic bulk assignment grader LLM engine"
authors = [
    {name = "Albert Bausili",email = "albert.bausili@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "pydantic (>=2.11.7,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "python-dotenv (>=1.0.0,<2.0.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "toml (>=0.10.2,<1.0.0)",
    "requests (>=2.31.0,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "jinja2 (>=3.1.6,<4.0.0)",
    "pymongo (>=4.14.0,<5.0.0)",
    "python-multipart (>=0.0.20,<1.0.0)",
    "pypdf (>=6.0.0,<7.0.0)",
    "httpx (>=0.28.1,<1.0.0)"
]

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
httpx = "^0.28.1"
mypy = "^1.18.1"
playwright = "^1.55.0"
pytest-playwright = "^0.7.1"
pytest-asyncio = "^1.2.0"
ruff = "^0.13.2"
bandit = {extras = ["toml"], version = "^1.7.5"}
safety = "^3.6.2"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
in-project = true

[tool.ruff]
target-version = "py311"
line-length = 120
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow asserts in tests

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101"]  # Skip assert_used

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
]